<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
 <title type="text">The Blog of Alex Harsányi: Posts tagged 'racket'</title>
 <link rel="self" href="https://alex-hhh.github.io/feeds/racket.atom.xml" />
 <link href="https://alex-hhh.github.io/tags/racket.html" />
 <id>urn:https-alex-hhh-github-io:-tags-racket-html</id>
 <updated>2023-04-29T00:36:55Z</updated>
 <entry>
  <title type="text">A Racket Array Tutorial</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2023/04/array-tutorial.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2023-04-array-tutorial-html</id>
  <published>2023-04-29T00:36:55Z</published>
  <updated>2023-04-29T00:36:55Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;If you are unfamiliar with NumPy or Matlab, Racket&amp;rsquo;s &lt;a href="https://docs.racket-lang.org/math/array.html"&gt;arrays&lt;/a&gt; can look strange and unusual, and we&amp;rsquo;ll try to figure out some use cases for them in this tutorial.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2023/04/array-tutorial.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Pumpkin Plot</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2022/10/pumpkin-plot.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2022-10-pumpkin-plot-html</id>
  <published>2022-10-16T07:23:00Z</published>
  <updated>2022-10-16T07:23:00Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;Inspired by the &lt;a href="https://github.com/zappo2/digital-art-with-matlab"&gt;Digital Arts with MATLAB&lt;/a&gt; project, I wanted to check out if the &lt;a href="https://docs.racket-lang.org/plot/index.html"&gt;Racket 3D Plot&lt;/a&gt; package could be used for a similar purpose, so I decided to plot a pumpkin&amp;hellip;&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2022/10/pumpkin-plot.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">The Wolf, the Goat, and the Cabbage</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2022/09/wolf-goat-cabbage.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2022-09-wolf-goat-cabbage-html</id>
  <published>2022-09-28T09:33:43Z</published>
  <updated>2022-09-28T09:33:43Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;&amp;hellip; in which we revisit &lt;a href="http://minikanren.org/"&gt;miniKanren&lt;/a&gt; and use it to solve a planning puzzle about ferrying some items safely across a river.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2022/09/wolf-goat-cabbage.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Timezone Lookup Revisited</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2022/08/timezone-lookup-revisited.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2022-08-timezone-lookup-revisited-html</id>
  <published>2022-08-05T23:05:26Z</published>
  <updated>2022-08-05T23:05:26Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;&amp;hellip; in which we look at how to really speed up the lookup of geographic locations in a large number or regions covering the entire Earth surface. This is the problem that the &lt;a href="https://github.com/alex-hhh/tzgeolookup"&gt;tzgeolookup&lt;/a&gt; package has to solve: given a geographic location it needs to determine which one among the 425 time zones it belongs to, and it has to do it quickly.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2022/08/timezone-lookup-revisited.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Heat Maps Revisited</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2022/05/heat-maps-revisited.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2022-05-heat-maps-revisited-html</id>
  <published>2022-05-10T11:05:04Z</published>
  <updated>2022-05-10T11:05:04Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;The Heat Map visualization in &lt;a href="https://github.com/alex-hhh/ActivityLog2"&gt;ActivityLog2&lt;/a&gt; has been updated to handle large amounts of data, making it possible to show all 11 years worth of GPS points that I have, and still being able to show an interactive map, where the user can zoom and move the map while data is loading.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2022/05/heat-maps-revisited.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Asteroids (Gameplay)</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2021/10/asteroids-part-2.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2021-10-asteroids-part-2-html</id>
  <published>2021-10-16T05:36:30Z</published>
  <updated>2021-10-16T05:36:30Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;&amp;hellip; having spent most of the &lt;a href="/2021/10/asteroids-part-1.html"&gt;first blog post&lt;/a&gt; on writing a small game engine to be able to handle the Asteroids game, in this post we&amp;rsquo;ll look at how to implement the actors to actually make the game playable.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2021/10/asteroids-part-2.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Asteroids (Game Engine)</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2021/10/asteroids-part-1.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2021-10-asteroids-part-1-html</id>
  <published>2021-10-06T23:58:25Z</published>
  <updated>2021-10-06T23:58:25Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;&amp;hellip; in which we look how we can implement the classic &lt;a href="https://en.wikipedia.org/wiki/Asteroids_%28video_game%29"&gt;Asteroids game&lt;/a&gt; game using only the &lt;a href="https://www.racket-lang.org/"&gt;Racket&lt;/a&gt; language and its graphics facilities. We&amp;rsquo;ll implement a basic game engine, a basic physics engine and the game itself, and manage to do it in about 1000 lines of code.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2021/10/asteroids-part-1.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Screenshots</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2021/09/screenshots.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2021-09-screenshots-html</id>
  <published>2021-09-03T01:17:48Z</published>
  <updated>2021-09-03T01:17:48Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;Can you write GUI applications in &lt;a href="https://racket-lang.org/"&gt;Racket&lt;/a&gt;? Different versions of this question shows up periodically on various Racket forums, and, of course, Racket does have a &lt;a href="https://docs.racket-lang.org/gui/index.html"&gt;GUI Library&lt;/a&gt;. However, usually the person asking the question implies a bit more, and it is not always clear what this &amp;ldquo;a bit more&amp;rdquo; is&amp;hellip;&lt;/p&gt;

&lt;p&gt;Rather than attempting to answer the question myself, I decided to just put together some screenshots of &lt;a href="https://github.com/alex-hhh/ActivityLog2"&gt;an application&lt;/a&gt; I wrote using Racket.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2021/09/screenshots.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Who Owns the Fish?</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2021/08/fish-puzzle.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2021-08-fish-puzzle-html</id>
  <published>2021-08-05T12:26:00Z</published>
  <updated>2021-08-05T12:26:00Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;&amp;hellip; that is the question. To find the answer will use a logic programming DSL embedded in Racket, named &lt;em&gt;miniKanren&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;By the way, if you are in a hurry: the German owns the Fish. Twice.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2021/08/fish-puzzle.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Shaded Area Plot</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2021/07/shaded-area-plot.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2021-07-shaded-area-plot-html</id>
  <published>2021-07-03T11:21:45Z</published>
  <updated>2021-07-03T11:21:45Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;&amp;hellip; in which we explore using interval renderers and color maps to create a plot where the area under the line is shaded based on data from a second data series.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2021/07/shaded-area-plot.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Box and Whiskers Plot</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2021/04/box-and-whiskers-plot.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2021-04-box-and-whiskers-plot-html</id>
  <published>2021-04-24T07:56:37Z</published>
  <updated>2021-04-24T07:56:37Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;The &lt;a href="https://en.wikipedia.org/wiki/Box_plot"&gt;Box and Whiskers&lt;/a&gt; plot is a method for depicting groups of numerical data through their quartiles and it is a popular way to depict statistical information about data sets, yet the &lt;a href="https://docs.racket-lang.org/plot/index.html"&gt;Racket plot&lt;/a&gt; package does not support such a plot type. In this blog post we&amp;rsquo;ll explore how to add this plot type to the plot package without having to modify the package itself, and we&amp;rsquo;ll look at some useful techniques of extending the plot package.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2021/04/box-and-whiskers-plot.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Climb Analysis Tool</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2021/04/climb-analysis-tool.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2021-04-climb-analysis-tool-html</id>
  <published>2021-04-08T10:55:00Z</published>
  <updated>2021-04-08T10:55:00Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;As part of preparing for a bicycle race in my local city I wanted to look at the climbs of the bike route and evaluate their difficulty. Since all the (free) online tools only provided basic analysis tools, I decided to write my own.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2021/04/climb-analysis-tool.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Plot Animations</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2021/01/plot-animations.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2021-01-plot-animations-html</id>
  <published>2021-01-10T06:42:44Z</published>
  <updated>2021-01-10T06:42:44Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;There is no specific animation function in the Racket &lt;a href="https://docs.racket-lang.org/plot/index.html"&gt;plot&lt;/a&gt; package, but animations can be build by repeatedly plotting individual frames onto a canvas or image using &lt;code&gt;plot/dc&lt;/code&gt;. The technique requires drawing the entire plot every frame, which will be inefficient for complex plots. In this blog post we explore how to construct plot animations using the &lt;code&gt;set-overlay-renderers&lt;/code&gt; method of a plot snip, which is a more efficient method when plots are embedded in GUI applications.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2021/01/plot-animations.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Space Invaders</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2020/11/space-invaders.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2020-11-space-invaders-html</id>
  <published>2020-11-28T02:10:03Z</published>
  <updated>2020-11-28T02:10:03Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;&amp;hellip; in which we attempt to recreate a classic game using the &lt;a href="https://www.racket-lang.org"&gt;Racket&lt;/a&gt; graphical facilities and exploring classes and objects.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2020/11/space-invaders.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Rendering the World Map Using the Racket Plot Package</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2020/10/world-map-using-plot.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2020-10-world-map-using-plot-html</id>
  <published>2020-10-09T23:15:58Z</published>
  <updated>2020-10-09T23:15:58Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;As part of writing the &lt;a href="https://pkgs.racket-lang.org/package/geoid"&gt;geoid&lt;/a&gt; package, I needed to visualize some geographic projections and I discovered that the 3D plotting facilities in the &lt;a href="https://docs.racket-lang.org/plot/index.html"&gt;racket plot package&lt;/a&gt; can be easily used for this task. The geoid package and the projection it uses is somewhat complex, so, to keep things simple, this blog post covers the display of the country outlines on a globe loading the data from the GeoJSON file and using only basic plotting facilities.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2020/10/world-map-using-plot.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Automating Tests for the Plot Package</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2020/08/automating-tests-for-the-plot-package.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2020-08-automating-tests-for-the-plot-package-html</id>
  <published>2020-08-01T00:24:12Z</published>
  <updated>2020-08-01T00:24:12Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;A few weeks ago I accepted to become maintainer of the plot package and one of my first objectives was to setup an automated build and test runs using Github Actions. The plot tests were changed to verify automatically that they pass (previously they had to be visually inspected for correctness), and the technique may be useful in writing tests for other graphical packages and applications.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2020/08/automating-tests-for-the-plot-package.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Ishido</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2020/06/ishido.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2020-06-ishido-html</id>
  <published>2020-06-21T02:33:23Z</published>
  <updated>2020-06-21T02:33:23Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;&amp;hellip; in which we attempt to recreate a game from the nineties using the &lt;a href="https://www.racket-lang.org"&gt;Racket&lt;/a&gt; graphical facilities and we manage to do it in less than 1000 lines of code.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2020/06/ishido.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Markdown View using the Racket editor%</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2020/05/markdown-view.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2020-05-markdown-view-html</id>
  <published>2020-05-29T22:58:08Z</published>
  <updated>2020-05-29T22:58:08Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;The Racket &lt;a href="https://docs.racket-lang.org/gui/text_.html"&gt;text%&lt;/a&gt; editor class can be used to display multi line text with formatting, such as fonts and colors; it is however, somewhat difficult to set it up and use its formatting capabilities. This blog post shows how to build a text view which allows inserting markdown text and the result will be formatted, with headers, links and images.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2020/05/markdown-view.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Dependency Management in Racket Applications</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2020/05/dependency-management-in-racket-applications.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2020-05-dependency-management-in-racket-applications-html</id>
  <published>2020-05-22T23:40:59Z</published>
  <updated>2020-05-22T23:40:59Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;.. in which we look at how to manage the versions of packages used by a Racket application, and ensure that the correct package versions are used when building the application.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2020/05/dependency-management-in-racket-applications.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">A Game of Tetris (user interface)</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2020/03/a-game-of-tetris-2.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2020-03-a-game-of-tetris-2-html</id>
  <published>2020-03-27T23:08:35Z</published>
  <updated>2020-03-27T23:08:35Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;The &lt;a href="/2020/03/a-game-of-tetris.html"&gt;previous&lt;/a&gt; blog post introduced the Tetris game mechanics and made the game playable. In this blog post we&amp;rsquo;ll look at how to build an actual GUI application around the game mechanics: we&amp;rsquo;ll keep score, increase difficulty, peek at the next block and more. As we do that, we&amp;rsquo;ll explore some more interesting things you can do with the Racket pict library, and look at some of the GUI facilities available in Racket.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2020/03/a-game-of-tetris-2.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">A Game of Tetris (gameplay)</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2020/03/a-game-of-tetris.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2020-03-a-game-of-tetris-html</id>
  <published>2020-03-05T08:24:02Z</published>
  <updated>2020-03-05T08:24:02Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;.. in which we implement a Tetris game step-by-step in &lt;a href="https://www.racket-lang.org"&gt;Racket&lt;/a&gt;, exploring pict graphics, contracts and unit tests.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2020/03/a-game-of-tetris.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Dual Axis Plots</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2020/02/dual-axis-plots.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2020-02-dual-axis-plots-html</id>
  <published>2020-02-07T23:10:18Z</published>
  <updated>2020-02-07T23:10:18Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;&amp;hellip; in which we explore how to show on the same plot two data series that have different data ranges. The &lt;a href="https://docs.racket-lang.org/plot/index.html"&gt;Racket Plot&lt;/a&gt; package does not support this functionality directly, but with the help of some data transformation, we can still achieve good results.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2020/02/dual-axis-plots.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Custom Rackunit Test Runner</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2019/11/custom-rackunit-test-runner.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2019-11-custom-rackunit-test-runner-html</id>
  <published>2019-11-29T00:31:21Z</published>
  <updated>2019-11-29T00:31:21Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;As the number of tests for a program continues to increase, it is no longer sufficient to know that all tests passed or which test failed. Other questions start to become important: were some tests inadvertently disabled? which tests were skipped? how did the duration of a test evolve over several versions of a program? Existing build platforms, such as Azure Devops, can help with test management, but in order make use of their features, we need to extend the Racket unit test library to report the test results to the build pipeline.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2019/11/custom-rackunit-test-runner.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Timezone Aware Local Time</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2019/10/local-time.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2019-10-local-time-html</id>
  <published>2019-10-26T03:18:30Z</published>
  <updated>2019-10-26T03:18:30Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;I wanted &lt;a href="https://github.com/alex-hhh/ActivityLog2"&gt;ActivityLog2&lt;/a&gt; to show that my New Zealand skiing run started at 10am, rather than showing 6am, which is the local time in Western Australia, where I live. This feature took a long time to implement, plus it required a surprising amount of effort, and this blog post describes some of the implementation details.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2019/10/local-time.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Interactive Heat Maps</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2019/09/interactive-heat-maps.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2019-09-interactive-heat-maps-html</id>
  <published>2019-09-20T23:04:13Z</published>
  <updated>2019-09-20T23:04:13Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;A HeatMap chart allows displaying a collection of GPS activities on a map and it is a nice way to visualize GPS data. On-line tools provide this functionality, but I wanted to implement my own, displaying heat maps using data from my own computer, without having to upload it to another website.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2019/09/interactive-heat-maps.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Racket Binary Packages</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2019/09/racket-binary-packages.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2019-09-racket-binary-packages-html</id>
  <published>2019-09-15T04:42:09Z</published>
  <updated>2019-09-15T04:42:09Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;The Racket source code is distributed under &lt;a href="https://www.gnu.org/licenses/lgpl-3.0.html"&gt;LGPL&lt;/a&gt; and this means that any proprietary Racket application distributed must also provide a way for the user to re-link an updated Racket runtime and produce a new executable for that application. In this blog post we&amp;rsquo;ll explore how to achieve this.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2019/09/racket-binary-packages.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Interactive Maps in the DrRacket REPL</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2019/09/map-snip.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2019-09-map-snip-html</id>
  <published>2019-09-07T23:54:13Z</published>
  <updated>2019-09-07T23:54:13Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;I updated the &lt;a href="/2018/06/racket-map-widget.html"&gt;map-widget package&lt;/a&gt; to allow map objects to &lt;code&gt;snip%&lt;/code&gt;&amp;rsquo;s so it can be inserted into a &lt;code&gt;pasteboard%&lt;/code&gt; and a side benefit of this work is that maps can now be embedded in the DrRacket REPL &amp;mdash; while this was not why I did these modifications, it does make for a cool demo.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2019/09/map-snip.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">More Timezone Lookup (loading and saving data)</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2019/08/timezone-lookup-2.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2019-08-timezone-lookup-2-html</id>
  <published>2019-08-10T00:17:06Z</published>
  <updated>2019-08-10T00:17:06Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;&amp;hellip; in which we explore how to write internal Racket data structures to disk and read them back, and use these features to improve load times for the GeoJSON data, so the program does not have to spend 20 seconds in the initialization step.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2019/08/timezone-lookup-2.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Timezone Lookup (an adventure in program optimization)</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2019/08/timezone-lookup.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2019-08-timezone-lookup-html</id>
  <published>2019-08-02T12:02:26Z</published>
  <updated>2019-08-02T12:02:26Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;&amp;hellip; in which we use GeoJSON data for timezone boundaries to determine the time zone for a given location, and learn a few things about the performance of Racket programs.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2019/08/timezone-lookup.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Timezone Visualization</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2019/05/timezone-visualization.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2019-05-timezone-visualization-html</id>
  <published>2019-05-18T01:23:30Z</published>
  <updated>2019-05-18T01:23:30Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;The &lt;a href="https://github.com/evansiroky/timezone-boundary-builder"&gt;timezone-boundary-builder&lt;/a&gt; project publishes &lt;a href="https://en.wikipedia.org/wiki/GeoJSON"&gt;GeoJSON&lt;/a&gt; files with timezone boundaries based on &lt;a href="https://www.openstreetmap.org"&gt;OpenStreetMap&lt;/a&gt; data, and I though it would be an interesting project to load this data in Racket, build some map visualizations with it and explore some of the Racket drawing facilities.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2019/05/timezone-visualization.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Build Racket Packages with Azure Pipelines</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2019/04/build-racket-packages-with-azure-pipelines.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2019-04-build-racket-packages-with-azure-pipelines-html</id>
  <published>2019-04-18T08:09:34Z</published>
  <updated>2019-04-18T08:09:34Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;With the future of Travis uncertain, I started looking for a &lt;a href="https://en.wikipedia.org/wiki/Continuous_integration"&gt;Continuous Integration&lt;/a&gt; alternative and since Microsoft advertised Azure DevOps everywhere I went on the web, I decided to give it a try. I now moved all my Racket packages to Azure Pipelines, plus have a Racket application built with it, so I decided to write up some notes about my experience.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2019/04/build-racket-packages-with-azure-pipelines.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Building a GUI Application for the Password Generator</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2019/03/password-generator-gui.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2019-03-password-generator-gui-html</id>
  <published>2019-03-23T02:45:15Z</published>
  <updated>2019-03-23T02:45:15Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;In the &lt;a href="/2019/03/password-generator.html"&gt;previous blog post&lt;/a&gt;, we built a password generator and packaged it as a command line utility, in this blog post we&amp;rsquo;ll look at how to build a GUI application with the same functionality and look at some of the techniques of building GUI applications in Racket.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2019/03/password-generator-gui.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Writing a Simple Password Generator in Racket</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2019/03/password-generator.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2019-03-password-generator-html</id>
  <published>2019-03-05T08:59:10Z</published>
  <updated>2019-03-05T08:59:10Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;There are many places in todays world where you need to provide a password and, since it is not recommended to reuse them, you will need to come up with many such passwords, all of them preferably secure. This blog post shows how to build a simple password generator. You may already use a password manager and may not have a need for a new one, still, this blog post might show you a few useful techniques for building Racket applications.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2019/03/password-generator.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">An Overview of Common Racket Data Structures</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2019/02/racket-data-structures.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2019-02-racket-data-structures-html</id>
  <published>2019-02-14T08:42:38Z</published>
  <updated>2019-02-14T08:42:38Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;The Racket language provides a variety of ready-to-use data structures and containers, however each such container has advantages and disadvantages when it comes to performance. The &amp;ldquo;everything is a list&amp;rdquo; approach makes things simple when you are learning Racket, but if you start using it for more complex programs, you need to be aware that lists are not always the best data structure to use. This guide looks at a few alternatives.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2019/02/racket-data-structures.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Building a Data Visualization Dashboard in Racket</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2019/02/data-visualization-dashboard.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2019-02-data-visualization-dashboard-html</id>
  <published>2019-02-09T00:36:49Z</published>
  <updated>2019-02-09T00:36:49Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;When experimenting with a new data visualization or data analysis method, it is simpler to write a prototype as a separate application, to evaluate if it is worthwhile investing the effort of adding a full feature to &lt;a href="/2017/09/introducing-activitylog2.html"&gt;ActivityLog2&lt;/a&gt;, this post illustrates the process used to write a &amp;ldquo;training load&amp;rdquo; &lt;a href="https://github.com/alex-hhh/AL2-IRisk-Dashboard"&gt;dashboard application&lt;/a&gt; in Racket.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2019/02/data-visualization-dashboard.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">An enhanced text-field% GUI control for Racket</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2018/11/an-enhanced-text-field-gui-control-for-racket.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2018-11-an-enhanced-text-field-gui-control-for-racket-html</id>
  <published>2018-11-21T12:28:28Z</published>
  <updated>2018-11-21T12:28:28Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;The Racket GUI library provides a &lt;code&gt;text-field%&lt;/code&gt; control which allows input of arbitrary text, but only basic functionality by default. However, the class is designed to be extensible and in this article we&amp;rsquo;ll look at how to extend this control to provide a more modern input control with a cue text and input data validation.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2018/11/an-enhanced-text-field-gui-control-for-racket.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Chess Game Using Racket's Pasteboard (part 3)</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2018/10/chess-game-using-racket-s-pasteboard-part-3.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2018-10-chess-game-using-racket-s-pasteboard-part-3-html</id>
  <published>2018-10-29T10:34:41Z</published>
  <updated>2018-10-29T10:34:41Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;The &lt;code&gt;pasteboard%&lt;/code&gt;object is an editor of &lt;code&gt;snip%&lt;/code&gt; objects and it implements some features that make sense for an editor: for example, you can select multiple snips and drag them around with the mouse, and you can move selected snips using the keyboard, you can also add any kind of snip, not just chess pieces to the pasteboard. Since none of these features are useful or desirable for a chess board game we will look at how to disable them.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2018/10/chess-game-using-racket-s-pasteboard-part-3.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Chess Game Using Racket's Pasteboard (part 2)</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2018/10/chess-game-using-racket-s-pasteboard-part-2.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2018-10-chess-game-using-racket-s-pasteboard-part-2-html</id>
  <published>2018-10-19T13:15:34Z</published>
  <updated>2018-10-19T13:15:34Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;This is a continuation of the &lt;a href="/2018/10/chess-game-using-racket-s-pasteboard.html"&gt;previous blog post&lt;/a&gt;, where the racket &lt;code&gt;pasteboard%&lt;/code&gt; features are explored by implementing a Chess Game Board. In this blog post we look at how to restrict piece movements to chess board squares, permit only valid moves and implement turn based game play.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2018/10/chess-game-using-racket-s-pasteboard-part-2.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Chess Game Using Racket's Pasteboard</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2018/10/chess-game-using-racket-s-pasteboard.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2018-10-chess-game-using-racket-s-pasteboard-html</id>
  <published>2018-10-12T11:35:13Z</published>
  <updated>2018-10-12T11:35:13Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;The Racket GUI library provides an &amp;ldquo;editor toolkit&amp;rdquo; which can be used to implement programs that use an interactive graphical canvas where objects can be moved around with the mouse. This toolkit has &lt;a href="http://docs.racket-lang.org/gui/editor-overview.html"&gt;good reference documentation&lt;/a&gt;, however this documentation can be somewhat overwhelming, and it is not always clear how to begin writing such interactive application, or how to achieve some basic functionality, so I wrote a tutorial on how to implement a chess board game in Racket using the &lt;code&gt;pasteboard%&lt;/code&gt; and &lt;code&gt;snip%&lt;/code&gt; classes which are part of the GUI library.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2018/10/chess-game-using-racket-s-pasteboard.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Racket Data Frame Package</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2018/08/racket-data-frame.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2018-08-racket-data-frame-html</id>
  <published>2018-08-04T22:59:45Z</published>
  <updated>2018-08-04T22:59:45Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;A Racket implementation of a data frame structure, which allows efficient manipulation of data that is organized in rows and columns. It was originally written as part of the &lt;a href="https://github.com/alex-hhh/ActivityLog2"&gt;ActivityLog2&lt;/a&gt; project, than moved into its own Racket package.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2018/08/racket-data-frame.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">A Racket GUI Widget to display maps based on OpenStreetMap tiles</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2018/06/racket-map-widget.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2018-06-racket-map-widget-html</id>
  <published>2018-06-12T09:06:17Z</published>
  <updated>2018-06-12T09:06:17Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;This is a Racket GUI Widget which can display maps based on Open Street Map tiles &amp;mdash; it allows embedding maps in Racket GUI applications. I originally wrote this code as part of the ActivityLog2 project and, since I wanted to use it in other projects, I decided to move it onto a separate package and publish it to the Racket package server.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2018/06/racket-map-widget.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Interactive Overlays With the Racket Plot Package -- Update</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2018/03/interactive-overlays-with-the-racket-plot-package-update.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2018-03-interactive-overlays-with-the-racket-plot-package-update-html</id>
  <published>2018-03-20T02:12:10Z</published>
  <updated>2018-03-20T02:12:10Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;I announced my &lt;a href="/2018/02/interactive-overlays-with-the-racket-plot-package.html"&gt;original&lt;/a&gt; plot overlay implementation on the &lt;a href="https://groups.google.com/forum/#!forum/racket-users"&gt;Racket Users&lt;/a&gt; mailing list and the Racket developers were enthusiastic about these improvements and they suggested that I contribute them to the main plot package. They also suggested a different approach for implementing this feature, which results in more flexibility for implementing overlays.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2018/03/interactive-overlays-with-the-racket-plot-package-update.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Interactive Overlays With the Racket Plot Package</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2018/02/interactive-overlays-with-the-racket-plot-package.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2018-02-interactive-overlays-with-the-racket-plot-package-html</id>
  <published>2018-02-03T00:08:05Z</published>
  <updated>2018-02-03T00:08:05Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;The &lt;a href="http://docs.racket-lang.org/plot/index.html"&gt;Racket plot package&lt;/a&gt; produces interactive &lt;code&gt;snip%&lt;/code&gt; objects which allow zooming of the plot area. While this is a cool and sometimes useful feature, the functionality is hard coded in the &lt;code&gt;plot-snip%&lt;/code&gt; class inside the package. I extended the package to allow the user to customize the interactive features of the plot, to display additional information when the user hovers the mouse over the plot.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2018/02/interactive-overlays-with-the-racket-plot-package.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Changing Built-in Racket Packages</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2018/01/changing-built-in-racket-packages.html?utm_source=racket&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2018-01-changing-built-in-racket-packages-html</id>
  <published>2018-01-29T11:12:09Z</published>
  <updated>2018-01-29T11:12:09Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;To modify one of the Racket built in packages, a local copy of the package has to be set up first. This is a surprisingly complicated task and I spent more time on it than I would like to admit. To save future me and others some time, I wrote up a set of instructions on how to do it.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2018/01/changing-built-in-racket-packages.html?utm_source=racket&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry></feed>