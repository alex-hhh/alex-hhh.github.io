<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
 <title type="text">The Blog of Alex Harsányi: The Blog of Alex Harsányi</title>
 <link rel="self" href="https://alex-hhh.github.io/feeds/all.atom.xml" />
 <link href="https://alex-hhh.github.io/index.html" />
 <id>urn:https-alex-hhh-github-io:-index-html</id>
 <updated>2019-05-18T01:23:30Z</updated>
 <entry>
  <title type="text">Timezone Visualization</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2019/05/timezone-visualization.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2019-05-timezone-visualization-html</id>
  <published>2019-05-18T01:23:30Z</published>
  <updated>2019-05-18T01:23:30Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;The &lt;a href="https://github.com/evansiroky/timezone-boundary-builder"&gt;timezone-boundary-builder&lt;/a&gt; project publishes &lt;a href="https://en.wikipedia.org/wiki/GeoJSON"&gt;GeoJSON&lt;/a&gt; files with timezone boundaries based on &lt;a href="https://www.openstreetmap.org"&gt;OpenStreetMap&lt;/a&gt; data, and I though it would be an interesting project to load this data in Racket, build some map visualizations with it and explore some of the Racket drawing facilities.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2019/05/timezone-visualization.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Build Racket Packages with Azure Pipelines</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2019/04/build-racket-packages-with-azure-pipelines.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2019-04-build-racket-packages-with-azure-pipelines-html</id>
  <published>2019-04-18T08:09:34Z</published>
  <updated>2019-04-18T08:09:34Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;With the future of Travis uncertain, I started looking for a &lt;a href="https://en.wikipedia.org/wiki/Continuous_integration"&gt;Continuous Integration&lt;/a&gt; alternative and since Microsoft advertised Azure DevOps everywhere I went on the web, I decided to give it a try. I now moved all my Racket packages to Azure Pipelines, plus have a Racket application built with it, so I decided to write up some notes about my experience.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2019/04/build-racket-packages-with-azure-pipelines.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Building a GUI Application for the Password Generator</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2019/03/password-generator-gui.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2019-03-password-generator-gui-html</id>
  <published>2019-03-23T02:45:15Z</published>
  <updated>2019-03-23T02:45:15Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;In the &lt;a href="/2019/03/password-generator.html"&gt;previous blog post&lt;/a&gt;, we built a password generator and packaged it as a command line utility, in this blog post we&amp;rsquo;ll look at how to build a GUI application with the same functionality and look at some of the techniques of building GUI applications in Racket.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2019/03/password-generator-gui.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Writing a Simple Password Generator in Racket</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2019/03/password-generator.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2019-03-password-generator-html</id>
  <published>2019-03-05T08:59:10Z</published>
  <updated>2019-03-05T08:59:10Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;There are many places in todays world where you need to provide a password and, since it is not recommended to reuse them, you will need to come up with many such passwords, all of them preferably secure. This blog post shows how to build a simple password generator. You may already use a password manager and may not have a need for a new one, still, this blog post might show you a few useful techniques for building Racket applications.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2019/03/password-generator.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">An Overview of Common Racket Data Structures</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2019/02/racket-data-structures.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2019-02-racket-data-structures-html</id>
  <published>2019-02-14T08:42:38Z</published>
  <updated>2019-02-14T08:42:38Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;The Racket language provides a variety of ready-to-use data structures and containers, however each such container has advantages and disadvantages when it comes to performance. The &amp;ldquo;everything is a list&amp;rdquo; approach makes things simple when you are learning Racket, but if you start using it for more complex programs, you need to be aware that lists are not always the best data structure to use. This guide looks at a few alternatives.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2019/02/racket-data-structures.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Building a Data Visualization Dashboard in Racket</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2019/02/data-visualization-dashboard.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2019-02-data-visualization-dashboard-html</id>
  <published>2019-02-09T00:36:49Z</published>
  <updated>2019-02-09T00:36:49Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;When experimenting with a new data visualization or data analysis method, it is simpler to write a prototype as a separate application, to evaluate if it is worthwhile investing the effort of adding a full feature to &lt;a href="/2017/09/introducing-activitylog2.html"&gt;ActivityLog2&lt;/a&gt;, this post illustrates the process used to write a &amp;ldquo;training load&amp;rdquo; &lt;a href="https://github.com/alex-hhh/AL2-IRisk-Dashboard"&gt;dashboard application&lt;/a&gt; in Racket.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2019/02/data-visualization-dashboard.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">An enhanced text-field% GUI control for Racket</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2018/11/an-enhanced-text-field-gui-control-for-racket.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2018-11-an-enhanced-text-field-gui-control-for-racket-html</id>
  <published>2018-11-21T12:28:28Z</published>
  <updated>2018-11-21T12:28:28Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;The Racket GUI library provides a &lt;code&gt;text-field%&lt;/code&gt; control which allows input of arbitrary text, but only basic functionality by default. However, the class is designed to be extensible and in this article we&amp;rsquo;ll look at how to extend this control to provide a more modern input control with a cue text and input data validation.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2018/11/an-enhanced-text-field-gui-control-for-racket.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Chess Game Using Racket's Pasteboard (part 3)</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2018/10/chess-game-using-racket-s-pasteboard-part-3.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2018-10-chess-game-using-racket-s-pasteboard-part-3-html</id>
  <published>2018-10-29T10:34:41Z</published>
  <updated>2018-10-29T10:34:41Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;The &lt;code&gt;pasteboard%&lt;/code&gt;object is an editor of &lt;code&gt;snip%&lt;/code&gt; objects and it implements some features that make sense for an editor: for example, you can select multiple snips and drag them around with the mouse, and you can move selected snips using the keyboard, you can also add any kind of snip, not just chess pieces to the pasteboard. Since none of these features are useful or desirable for a chess board game we will look at how to disable them.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2018/10/chess-game-using-racket-s-pasteboard-part-3.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Chess Game Using Racket's Pasteboard (part 2)</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2018/10/chess-game-using-racket-s-pasteboard-part-2.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2018-10-chess-game-using-racket-s-pasteboard-part-2-html</id>
  <published>2018-10-19T13:15:34Z</published>
  <updated>2018-10-19T13:15:34Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;This is a continuation of the &lt;a href="/2018/10/chess-game-using-racket-s-pasteboard.html"&gt;previous blog post&lt;/a&gt;, where the racket &lt;code&gt;pasteboard%&lt;/code&gt; features are explored by implementing a Chess Game Board. In this blog post we look at how to restrict piece movements to chess board squares, permit only valid moves and implement turn based game play.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2018/10/chess-game-using-racket-s-pasteboard-part-2.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Chess Game Using Racket's Pasteboard</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2018/10/chess-game-using-racket-s-pasteboard.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2018-10-chess-game-using-racket-s-pasteboard-html</id>
  <published>2018-10-12T11:35:13Z</published>
  <updated>2018-10-12T11:35:13Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;The Racket GUI library provides an &amp;ldquo;editor toolkit&amp;rdquo; which can be used to implement programs that use an interactive graphical canvas where objects can be moved around with the mouse. This toolkit has &lt;a href="http://docs.racket-lang.org/gui/editor-overview.html"&gt;good reference documentation&lt;/a&gt;, however this documentation can be somewhat overwhelming, and it is not always clear how to begin writing such interactive application, or how to achieve some basic functionality, so I wrote a tutorial on how to implement a chess board game in Racket using the &lt;code&gt;pasteboard%&lt;/code&gt; and &lt;code&gt;snip%&lt;/code&gt; classes which are part of the GUI library.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2018/10/chess-game-using-racket-s-pasteboard.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Racket Data Frame Package</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2018/08/racket-data-frame.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2018-08-racket-data-frame-html</id>
  <published>2018-08-04T22:59:45Z</published>
  <updated>2018-08-04T22:59:45Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;A Racket implementation of a data frame structure, which allows efficient manipulation of data that is organized in rows and columns. It was originally written as part of the &lt;a href="https://github.com/alex-hhh/ActivityLog2"&gt;ActivityLog2&lt;/a&gt; project, than moved into its own Racket package.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2018/08/racket-data-frame.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">A Racket GUI Widget to display maps based on OpenStreetMap tiles</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2018/06/racket-map-widget.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2018-06-racket-map-widget-html</id>
  <published>2018-06-12T09:06:17Z</published>
  <updated>2018-06-12T09:06:17Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;This is a Racket GUI Widget which can display maps based on Open Street Map tiles &amp;mdash; it allows embedding maps in Racket GUI applications. I originally wrote this code as part of the ActivityLog2 project and, since I wanted to use it in other projects, I decided to move it onto a separate package and publish it to the Racket package server.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2018/06/racket-map-widget.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Running and Cycling Workout Editor</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2018/05/workout-editor.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2018-05-workout-editor-html</id>
  <published>2018-05-27T00:37:52Z</published>
  <updated>2018-05-27T00:37:52Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;A Garmin fitness device can use workouts during a bike or run activity: they are a collection of steps with a duration and intensity (such as heart rate, pace or power). While running or biking, the device keeps track of the duration and will sound an alarm if the intensity is too high or too low. Workouts can be created on the Garmin Connect website, but I decided to write my own application for creating workouts.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2018/05/workout-editor.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Arduino 433Mhz Receiver -- Reading Keyfobs</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2018/05/arduino-433mhz-receiver.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2018-05-arduino-433mhz-receiver-html</id>
  <published>2018-05-18T23:45:18Z</published>
  <updated>2018-05-18T23:45:18Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;I bought a 433Mhz receiver shield for Arduino as I wanted to experiment with wireless communication, and, as the first application, I built a receiver that can read serial numbers and button status from my garage door opener remote.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2018/05/arduino-433mhz-receiver.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Interactive Overlays With the Racket Plot Package -- Update</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2018/03/interactive-overlays-with-the-racket-plot-package-update.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2018-03-interactive-overlays-with-the-racket-plot-package-update-html</id>
  <published>2018-03-20T02:12:10Z</published>
  <updated>2018-03-20T02:12:10Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;I announced my &lt;a href="/2018/02/interactive-overlays-with-the-racket-plot-package.html"&gt;original&lt;/a&gt; plot overlay implementation on the &lt;a href="https://groups.google.com/forum/#!forum/racket-users"&gt;Racket Users&lt;/a&gt; mailing list and the Racket developers were enthusiastic about these improvements and they suggested that I contribute them to the main plot package. They also suggested a different approach for implementing this feature, which results in more flexibility for implementing overlays.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2018/03/interactive-overlays-with-the-racket-plot-package-update.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Arduino Inclinometer Improvements</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2018/03/arduino-inclinometer-improvements.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2018-03-arduino-inclinometer-improvements-html</id>
  <published>2018-03-09T10:07:27Z</published>
  <updated>2018-03-09T10:07:27Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;After using the &lt;a href="/2017/12/arduino-inclinometer.html"&gt;inclinometer&lt;/a&gt; for a while, it became apparent that the functionality was too basic. I extended it, so the unit tracks maximum pitch and roll values seen, displays the pitch and roll direction and can perform calibration on demand, so the unit does not have to acquire its orientation each time it is started up. I also built a better enclosure for it.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2018/03/arduino-inclinometer-improvements.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Interactive Overlays With the Racket Plot Package</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2018/02/interactive-overlays-with-the-racket-plot-package.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2018-02-interactive-overlays-with-the-racket-plot-package-html</id>
  <published>2018-02-03T00:08:05Z</published>
  <updated>2018-02-03T00:08:05Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;The &lt;a href="http://docs.racket-lang.org/plot/index.html"&gt;Racket plot package&lt;/a&gt; produces interactive &lt;code&gt;snip%&lt;/code&gt; objects which allow zooming of the plot area. While this is a cool and sometimes useful feature, the functionality is hard coded in the &lt;code&gt;plot-snip%&lt;/code&gt; class inside the package. I extended the package to allow the user to customize the interactive features of the plot, to display additional information when the user hovers the mouse over the plot.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2018/02/interactive-overlays-with-the-racket-plot-package.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Changing Built-in Racket Packages</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2018/01/changing-built-in-racket-packages.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2018-01-changing-built-in-racket-packages-html</id>
  <published>2018-01-29T11:12:09Z</published>
  <updated>2018-01-29T11:12:09Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;To modify one of the Racket built in packages, a local copy of the package has to be set up first. This is a surprisingly complicated task and I spent more time on it than I would like to admit. To save future me and others some time, I wrote up a set of instructions on how to do it.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2018/01/changing-built-in-racket-packages.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Equipment Usage and Costs</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2018/01/equipment-usage-and-costs.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2018-01-equipment-usage-and-costs-html</id>
  <published>2018-01-14T12:23:19Z</published>
  <updated>2018-01-14T12:23:19Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;I paid $600 for my Garmin FR920 GPS watch, and since I got it, I bought six pairs of running shoes totaling $1124 and went to the swimming pool 153 times: at approximately $5 for a swim session, this is $765 spend on swimming. While the FR920 cost more than a single pair of running shoes or a single swimming session, it actually comes out as cheaper to own than the previous two.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2018/01/equipment-usage-and-costs.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Running and Outdoor Temperature</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2017/12/running-and-outdoor-temperature.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2017-12-running-and-outdoor-temperature-html</id>
  <published>2017-12-21T09:09:45Z</published>
  <updated>2017-12-21T09:09:45Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;It is no surprise to anyone who tried to run in the heat that it is harder than when the outdoor temperature is more pleasant. But how much harder is it, and how can this be quantified? With summer in full swing in the southern hemisphere, I decided to take a look at how running is affected by temperature.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2017/12/running-and-outdoor-temperature.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Arduino Inclinometer</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2017/12/arduino-inclinometer.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2017-12-arduino-inclinometer-html</id>
  <published>2017-12-09T03:09:26Z</published>
  <updated>2017-12-09T03:09:26Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;My brother-in-law got himself a 4WD and wanted an inclinometer module to display the roll and pitch of the vehicle while going on his adventures. I build one using an Arduino Nano and an accelerometer module.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2017/12/arduino-inclinometer.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Fatigue and Running Form</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2017/11/fatigue-and-running-form.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2017-11-fatigue-and-running-form-html</id>
  <published>2017-11-28T11:06:57Z</published>
  <updated>2017-11-28T11:06:57Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;My Garmin FR920 watch keeps track of &lt;em&gt;running form&lt;/em&gt; related measurements: Cadence, Stride, Ground Contact Time and Vertical Oscillation. Given that I collected a lot of data during my last Marathon training, I decided to have a look at how running form changes as I get more tired during a run.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2017/11/fatigue-and-running-form.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Quantifying Fatigue</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2017/11/quantifying-fatigue.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2017-11-quantifying-fatigue-html</id>
  <published>2017-11-25T01:07:30Z</published>
  <updated>2017-11-25T01:07:30Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;I needed a way to measure fatigue as it accumulates during a running session. There is no actual &amp;ldquo;fatigue&amp;rdquo; measurement that I&amp;rsquo;m aware of, so I had to find a substitute.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2017/11/quantifying-fatigue.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Bike Trainer</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2017/11/bike-trainer.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2017-11-bike-trainer-html</id>
  <published>2017-11-13T21:58:09Z</published>
  <updated>2017-11-13T21:58:09Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;I bought a bike trainer last June for indoor riding during winter (which in the southern hemisphere is in July and August.) and I decided to write virtual ride simulator to use it. The simulator would follow a predefined course on the map: the current position would advance based on the speed received from the trainer, and the application would control the resistance based on the slope at the current location.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2017/11/bike-trainer.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Marathon Training 2017 Statistics</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2017/09/marathon-training-2017-statistics.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2017-09-marathon-training-2017-statistics-html</id>
  <published>2017-09-21T12:37:29Z</published>
  <updated>2017-09-21T12:37:29Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;In June 2017 I completed my second Marathon. While the time was not what I expected, I still managed to get a sub 4 hour time, earning a yellow ribbon finishers medal. Let&amp;rsquo;s look at some statistics from my training for this race.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2017/09/marathon-training-2017-statistics.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry>
 <entry>
  <title type="text">Introducing ActivityLog2</title>
  <link rel="alternate" href="https://alex-hhh.github.io/2017/09/introducing-activitylog2.html?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:https-alex-hhh-github-io:-2017-09-introducing-activitylog2-html</id>
  <published>2017-09-15T12:26:56Z</published>
  <updated>2017-09-15T12:26:56Z</updated>
  <author>
   <name>Alex Harsányi</name></author>
  <content type="html">
&lt;p&gt;&lt;a href="https://github.com/alex-hhh/ActivityLog2"&gt;ActivityLog2&lt;/a&gt; is a program that can analyze data recorded by fitness devices such as swim, bike and run sessions. It can be used as a training log and to gain insights about your training using reports and trend charts.&lt;/p&gt;&lt;a href="https://alex-hhh.github.io/2017/09/introducing-activitylog2.html?utm_source=all&amp;amp;utm_medium=Atom"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</content></entry></feed>